generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  username  String   @unique
  bio       String?
  avatar    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  habits      Habit[]
  completions Completion[]

  following   Friendship[] @relation("Follower")
  followers   Friendship[] @relation("Following")

  @@map("users")
}

model Habit {
  id          String   @id @default(cuid())
  name        String
  category    String
  frequency   String
  notes       String?
  color       String?  @default("#3b82f6")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  userId      String
  user        User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  completions Completion[]

  @@unique([userId, name])
  @@map("habits")
}

model Completion {
  id          String   @id @default(cuid())
  completedAt DateTime @default(now())
  notes       String?
  
  habitId     String
  habit       Habit    @relation(fields: [habitId], references: [id], onDelete: Cascade)
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([habitId, completedAt])
  @@map("completions")
}

model Friendship {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  
  followerId  String
  followingId String
  follower    User     @relation("Follower", fields: [followerId], references: [id], onDelete: Cascade)
  following   User     @relation("Following", fields: [followingId], references: [id], onDelete: Cascade)

  @@unique([followerId, followingId])
  @@map("friendships")
}
